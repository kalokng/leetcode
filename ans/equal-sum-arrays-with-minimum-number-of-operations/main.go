package main

import "fmt"

func main() {
	//fmt.Println(minOperations([]int{1, 2, 3, 4, 5, 6}, []int{1, 1, 2, 2, 2, 2}))
	//fmt.Println(minOperations([]int{1, 1, 1, 1, 1, 1, 1}, []int{6}))
	//fmt.Println(minOperations([]int{6, 6}, []int{1}))
	fmt.Println(minOperations(
		[]int{1, 2, 6, 4, 1, 5, 4, 6, 5, 4, 4, 6, 6, 4, 3, 3, 1, 2, 1, 6, 2, 2, 4, 2, 5, 5, 3, 1, 4, 2, 2, 1, 4, 4, 5, 6, 1, 3, 4, 1, 3, 5, 3, 5, 3, 4, 4, 4, 3, 3, 5, 1, 2, 2, 4, 5, 2, 1, 2, 3, 3, 4, 1, 3, 2, 4, 1, 3, 5, 1, 6, 3, 3, 4, 6, 5, 5, 2, 6, 5, 4, 5},
		[]int{6, 3, 4, 6, 4, 3, 6, 4, 2, 4, 5, 5, 1, 1, 3, 2, 1, 1, 4, 2, 5, 1, 5, 6, 6, 2, 1, 3, 4, 6, 4, 6, 3, 6, 1, 1, 4, 4, 6, 3, 3, 5, 5, 4, 6, 6, 1, 3, 4, 1, 3, 5, 1, 1, 1, 5, 2, 1, 1, 1, 2, 3, 6, 6, 2, 5, 4, 2, 1, 5, 3, 1, 2, 3, 6, 4, 2, 5, 4, 6, 6, 6, 6, 6, 3, 2, 2, 2, 1, 6, 4, 5, 6, 1, 5, 1, 5, 6, 6, 4, 6, 5, 3, 4, 1, 3, 2, 1, 5, 1, 1, 1, 2, 3, 6, 6, 6, 4, 6, 3, 6, 4, 4, 6, 3, 6, 3, 6, 2, 6, 5, 1, 1, 6, 4, 3, 4, 2, 5, 3, 3, 5, 2, 3, 1, 3, 2, 6, 5, 1, 2, 4, 4, 6, 2, 1, 4, 3, 3, 3, 3, 5, 6, 1, 6, 4, 2, 3, 5, 4, 6, 1, 3, 6, 1, 2, 2, 1, 3, 5, 6, 2, 3, 6, 5, 3, 4, 1, 3, 1, 2, 3, 5, 4, 2, 1, 2, 1, 2, 5, 2, 4, 4, 4, 2, 5, 2, 4, 3, 2, 1, 5, 1, 3, 3, 1, 1, 1, 1, 6, 1, 3, 6, 2, 3, 6, 3, 3, 4, 5, 2, 1, 3, 3, 4, 1, 4, 3, 4, 4, 3, 2, 1, 4, 5, 2, 1, 2, 5, 6, 1, 5, 2, 4, 5, 1, 6, 2, 6, 1, 3, 6, 2, 3, 6, 6, 3, 2, 2, 3, 1, 6, 1, 5, 6, 4, 2, 3, 5, 2, 6, 3, 5, 4, 2, 6, 6, 6, 5, 5, 4, 2, 3, 1, 1, 4, 4, 4, 5, 2, 4, 3, 6, 4, 3, 3, 2, 3, 4, 6, 1, 1, 6, 1, 6, 2, 4, 5, 4, 2, 4, 4, 4, 1, 1, 1, 1, 3, 4, 1, 2, 5, 1, 2, 1, 4, 5, 6, 4, 6, 4, 3, 1, 6, 5, 5, 2, 1, 1, 1, 1, 6, 5, 5, 3, 2, 2, 2, 2, 6, 2, 3, 3, 5, 1, 6, 5, 6, 2, 2, 1, 6, 1, 6, 5, 2, 5, 4, 4, 1, 5, 5, 6, 4, 4, 1, 3, 1, 6, 4, 4, 3, 1, 6, 6, 6, 4, 6, 5, 3, 6, 4, 3, 6, 2, 3, 3, 3, 2, 4, 2, 2, 2, 3, 5, 2, 6, 5, 4, 5, 4, 2, 5, 1, 3, 6, 4, 1, 2, 1, 3, 3, 3, 3, 1}),
	)
}

func min(a, b int) int {
	if a < b {
		return a
	}
	return b
}

func max(a, b int) int {
	if a > b {
		return a
	}
	return b
}

func abs(x int) int {
	if x < 0 {
		return -x
	}
	return x
}

func minOperations(nums1 []int, nums2 []int) int {
	l1, l2 := len(nums1), len(nums2)
	if l1 > l2 {
		l1, l2 = l2, l1
	}
	if l2 > 6*l1 {
		return -1
	}
	n1 := make([]int, 7)
	n2 := make([]int, 7)
	var s1, s2 int
	for _, v := range nums1 {
		s1 += v
		n1[v]++
	}
	for _, v := range nums2 {
		s2 += v
		n2[v]++
	}
	d := s1 - s2
	if d < 0 {
		d = -d
		s1, s2 = s2, s1
		n1, n2 = n2, n1
	}
	n := 0
	for i := 1; i < 6; i++ {
		fmt.Println(i, d, n)
		fmt.Println(n1[1:], n2[1:])
		if d <= n1[7-i]*(6-i) {
			return n + (d+5-i)/(6-i)
		}
		d -= n1[7-i] * (6 - i)
		n += n1[7-i]
		if d <= n2[i]*(6-i) {
			return n + (d+5-i)/(6-i)
		}
		d -= n2[i] * (6 - i)
		n += n2[i]
	}
	return n
}
